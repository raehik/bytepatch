name: bytepatch
version: "0.1.0"
synopsis: Patch byte-representable data in a bytestream.
github: raehik/bytepatch
extra-source-files:
- README.md
- CHANGELOG.md

# all unintrusive extensions from Alexis King's 2018 recommended defaults
# https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/
# plus TypeApplications (useful even without ScopedTypeVariables)
default-extensions:
- EmptyCase
- FlexibleContexts
- FlexibleInstances
- InstanceSigs
- MultiParamTypeClasses
- LambdaCase
- DeriveGeneric
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveLift
- DeriveTraversable
- DerivingStrategies
- GeneralizedNewtypeDeriving
- StandaloneDeriving
- BangPatterns
- KindSignatures
- TypeOperators
- TypeApplications

dependencies:
- base
- bytestring
- mtl
- optics
- generic-optics
- text
- megaparsec
- aeson

library:
  source-dirs: src

executables:
  bytepatch:
    source-dirs: app
    main: Main.hs
    ghc-options:
    - -Wall
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - bytepatch
    - optparse-applicative
    - yaml
